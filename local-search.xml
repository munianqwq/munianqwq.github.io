<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ctfshow--misc</title>
    <link href="/2024/12/08/ctfshow-misc/"/>
    <url>/2024/12/08/ctfshow-misc/</url>
    
    <content type="html"><![CDATA[<h2 id="misc–18根据题目提示打开图片属性挨个复制粘贴即可"><a href="#misc–18根据题目提示打开图片属性挨个复制粘贴即可" class="headerlink" title="misc–18根据题目提示打开图片属性挨个复制粘贴即可"></a>misc–18<br>根据题目提示打开图片属性挨个复制粘贴即可</h2><h2 id="misc–19没弄懂主机文档是啥，在常规的属性–详细信息中没找到，看wp后使用010打开看到了两段flag拼凑出完整的；后又发现网站-https-exif-tuchong-com-可以看到更详细的属性内容"><a href="#misc–19没弄懂主机文档是啥，在常规的属性–详细信息中没找到，看wp后使用010打开看到了两段flag拼凑出完整的；后又发现网站-https-exif-tuchong-com-可以看到更详细的属性内容" class="headerlink" title="misc–19没弄懂主机文档是啥，在常规的属性–详细信息中没找到，看wp后使用010打开看到了两段flag拼凑出完整的；后又发现网站  https://exif.tuchong.com/  可以看到更详细的属性内容"></a>misc–19<br>没弄懂主机文档是啥，在常规的属性–详细信息中没找到，看wp后使用010打开看到了两段flag拼凑出完整的；后又发现网站  <a href="https://exif.tuchong.com/">https://exif.tuchong.com/</a>  可以看到更详细的属性内容</h2><p>misc–20<br>吸取上一题的教训，先用010打开查找cyf和pk无果，使用上一题拿到的网站打开，发现评论区有一段谐音字段，照打即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>buuctf——misc——wp</title>
    <link href="/2024/12/03/buuctf%E2%80%94%E2%80%94misc/"/>
    <url>/2024/12/03/buuctf%E2%80%94%E2%80%94misc/</url>
    
    <content type="html"><![CDATA[<p>一、qr<br>下载文件——解压压缩包——得到一个二维码——–使用CQR工具扫描——得到flag</p><hr><p>二、LSB<br>顾名思义—-下载附件—-解压缩——–用stegsolve打开——-选择analyse→data extract———</p><img src="/2024/12/03/buuctf%E2%80%94%E2%80%94misc/image.png" class=""><p>———发现是png格式———修改文件后缀为png——打开得到flag</p><hr><p>三、乌峰镇会种图<br>下载附件—–发现是图片——用stegsolve打开———</p><img src="/2024/12/03/buuctf%E2%80%94%E2%80%94misc/1.png" class=""><p>——拉到最下面——得到flag&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;也可以直接用winhex或010打开———–尾部就是flag</p><hr><p>四、二维码<br>下载附件———-解压缩——-得到一个二维码——-使用CQR扫描——–发现secret is here——–猜到可能有其他文件———使用binwalk看一下——–发现zip文件——-用foremost&#x2F;binwalk提取—–解压缩发现要密码———但txt文件提醒我们是四位纯密码———-使用Ziperello打开——选择暴力破解——–设置爆破密码位数———得到密码——–再次解压缩txt文件—-得到flag</p><hr><p>五、镜子里面的世界<br>打开是图片———另存为（）——–发现文件名为steg.png———-易想到用stegsolve打开——-选择analyse→data extract———可以看到关键字secret key is：——–冒号后就是flag—–复制到答案区—–用flag{}包起来———删去复制时的空格—–提交</p><hr><p>六、大白<br>下载附件———-题目提示屏幕太小（bushi———–联想到可能是png图片高度被修改导致显示不完全——-放进风二西工具png长宽高一把梭——–得到新图片——打开得到flag</p><hr><p>七、签到<br>打开题目获得flag</p><hr><p>八、金三胖<br>下载附件——–解压缩得到gif动图——–发现flag被分散到不同帧——-用stegsolve打开——–</p><img src="/2024/12/03/buuctf%E2%80%94%E2%80%94misc/2.png" class=""><p>———逐帧查找将flag连起来———-可以使用截图工具的提取文字（不用手打了）<br>——————————————————————————————————————————————————————<br>九、N种方法解决<br>下载附件后解压出–KEY.exe—-用010打开该文件（这是我所不知道的，可以用010打开.exe）—看到是base64，进行解码，发现是png文件，但我用的是随波逐流解码，我不会把解压的结果保存为png图片，于是到the-x在线网站重复上述步骤，用其内置的png插件保存为png，打开图片是一个二维码，用cqr扫一下就ok了<br>——————————————————————————————————————————————————————<br>十、zip伪加密<br>下载附件，因为题目明确指出是伪加密。于是用010直接打开压缩包，看到两个0900，分别改为0000即可正常解压，解压后就出现了flag——对于zip加密文件，简单来看一种是504b后均为0900，这种是如果都改为0000后不能正常解密，那就是真正的加密文件，需要爆破。—-另一种是0000和0900，这种就是伪加密文件，把0900改为0000即可<br>——————————————————————————————————————————————————————<br>十一、爱因斯坦<br>下载附件后发现是一张图片，随手用010打开看是否有信息，明显看到有exif字样，于是返回去看图片的详细属性，在注释一栏有this_is_not_password，我第一次以为这就是flag，提价后发现不对，于是用stegsolve打开，分析一下，看到底部的flag.txt以及显眼的PK字样，于是返回010拉到最底部，果然有504b0304以及504b0506，于是将这部分复制下来，另存为zip形式，将注释的密码输入进去即可解压，解压后即为flag<br>——————————————————————————————————————————————————————<br>十二、ningen<br>题目中提到密码，且是4位纯数字，易想到加密压缩包，打开附件，是一张图片，保存下来，用010打开，搜索504b，找到文件尾部的压缩文件，复制另存为zip文件，发现确实要解密，于是用ziperello工具进行暴力破解，得密码为8368，于是加压得到ningen.txt，打开就是flag<br>——————————————————————————————————————————————————————<br>十三、小明的保险箱<br>题目给了4位纯数字密码的提示，一样容易想到加密压缩包，去010搜索504b发现不是zip，于是我憨憨的去stegsolve分析，看到rar我才想起来去010找rar压缩包，果然有，于是复制另存为rar压缩包格式，接着用archpr暴力破解，得到密码为7869，解压得到2.txt，就得到了flag<br>——————————————————————————————————————————————————————<br>十四、隐藏的钥匙<br>题目指出这是一张图片，用010打开，发现信息杂乱无章，于是用stegsolve打开分析，很奇怪的是我一点击分析，stegsolve就会卡住，于是不得已回到010，因为题目提到了钥匙，于是搜索key无果，有尝试了504b，rar，以及flag，终于在搜索flag发现一串base64字符，用随波逐流解码–注意两侧的括号也要复制下来–得到一串字符，报上flag{}即可<br>——————————————————————————————————————————————————————<br>十五、另一个世界<br>下载附件打开后是一张图片，用010打开，搜索flag，ctf等未发现有效信息，于是拉到最底部发现一串二进制，复制下来转换为字符串就是flag——没想到这么简单，我以为这是一串无意义的字符，因为我在尝试这串字符时把flag打成了falg啊啊啊啊啊啊<br>——————————————————————————————————————————————————————<br>十六、数据包中的线索<br>流量题，接触的比较少，这一题下载附件后，解压打开流量包，显示统计，协议分级，发现大多为tcp流量，于是抓几个tcp追踪，发现很长的字符，我没有意识到这是base64编码—–此处我是看了别人的wp才知道—–然后整个复制到the-x解码保存为jip即可—————-其实这一段是有提示的，首先它有&#x2F;这个符号和+这个符号，只是因为量太大了不敢去想，再就是这段字符最后是有一个等于号&#x3D;来提示是base64或者32的<br>——————————————————————————————————————————————————————<br>十七、神秘龙卷风<br>很奇怪的一道题，从题目得到附件中加密rar的密码是4位数字，用archpr暴力破解后发现一串奇怪的字符串，没见过，看别人wp后才知道是brainfuck代码，是一种极小化的计算机语言，由+-&lt;&gt;组成，在网站<a href="https://www.bf.doleczek.pl/%E8%BF%9B%E8%A1%8C%E8%A7%A3%E7%A0%81%E5%BE%97%E5%88%B0flag">https://www.bf.doleczek.pl/进行解码得到flag</a><br>——————————————————————————————————————————————————————<br>十八、FLAG<br>很有意思的一道题目感觉哈哈哈哈，居然写出来了，之前是没写出来的。—–首先将图片保存下来，然后用010打开，日常搜索504b，key，ctf，flag等无果，于是用stegsolve打开分析，第一遍无果，于是试试lsb隐写，发现了熟悉的PK字样，再看文件头确实是504b0304，于是保存为zip文件，再用010打开，把504b0304到504b0506这一段另存为zip，再解压该zip文件，得到2这个文档，用010打开，搜索ctf即可找到flag——–感觉我哪里应该是做麻烦了，但不想找了qwq<br>——————————————————————————————————————————————————————<br>十九、假如给我三天光明<br>ok，又是一道非常有意思的题目，第一次碰到音频隐写。——-首先是解压附件，得到一个压缩包和一张图片，看着题目假如给我三天光明很容易联想到图片中的点阵是盲文，对照盲文表就可以得到压缩包密码为kmdodwg，再用010打开压缩包发现是rar压缩包，将zip后缀改为rar，输入密码解压得到一个音频文件，听后是摩斯电码，于是用audacity打开，发现摩斯电码为-.-.&#x2F;-&#x2F;..-.&#x2F;.–&#x2F;.–.&#x2F;.&#x2F;..&#x2F;—–&#x2F;—..&#x2F;–…&#x2F;…–&#x2F;..—&#x2F;..–..&#x2F;..—&#x2F;…–&#x2F;-..&#x2F;–..<br>用随波逐流解码得到flag，第一次字母是大写不对，试试小写，就过了！<br>——————————————————————————————————————————————————————<br>二十、后门查杀<br>下载附件，解压后火绒爆出有问题的文件，打开后看到pass后面一串md5的字符，没仔细看题，我以为要将md5解码，后发现不用，于是提交flag，解决<br>——————————————————————————————————————————————————————<br>二十一、webshell后门<br>同后门查杀一样的解题，文件为zp.php，找到密码提交即为flag<br>——————————————————————————————————————————————————————<br>二十二、来首歌吧<br>下载附件，解压后是一个音频文件，用audacity打开，发现摩斯密码，手敲出来后解码即为flag。————我第一遍敲错了啊啊啊啊啊，少一个-<br>——————————————————————————————————————————————————————<br>二十三、荷兰数据泄露<br>第一次碰到.bin的文件，是一种二进制文件，该题目的conf.bin是一个宽带文件，需要用到工具RouterPassView，用工具将文件打开，由于题目没有明确指出flag是什么，尝试用户名或者密码，发现是用户名，结束</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2024/12/03/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2024/12/03/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<img src="/2024/12/03/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/7.png" class="">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>post</title>
    <link href="/2024/12/03/post/"/>
    <url>/2024/12/03/post/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/19/hello-world/"/>
    <url>/2024/11/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
